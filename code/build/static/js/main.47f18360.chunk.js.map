{"version":3,"sources":["theme/theme.ts","components/subcomponent/subcomponent.tsx","service/auth-service.ts","components/auth/no-auth.tsx","components/error/error.tsx","components/main.tsx","index.js"],"names":["customTheme","createTheme","CustomTheme","Subcomponent","Box","AuthService","setAuthentication","NoAuth","ErrorHandler","state","hasError","error","errorInfo","console","this","Typography","variant","props","children","_","Component","Main","useState","isAuthenticated","setIsAuthenticated","useEffect","ThemeProvider","theme","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAEMA,EAAcC,YAAY,IAcnBC,EACD,WACR,OAAOF,G,eCbEG,EAAe,WACxB,OAAO,cAACC,EAAA,EAAD,4BCEEC,EACK,SAACC,GACXA,GAAkB,ICRbC,EAAS,WAClB,OAAO,cAACH,EAAA,EAAD,iC,wCCGEI,EAAb,4MAEWC,MAAe,CAClBC,UAAU,GAHlB,uDAWI,SAAyBC,EAAcC,GACnCC,QAAQF,MAAM,UAAWA,EAAOC,KAZxC,oBAeI,WACI,OAAGE,KAAKL,MAAMC,SACH,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAApB,uBAEJF,KAAKG,MAAMC,YAnB1B,uCAMI,SAAuCC,GAEnC,MAAO,CAACT,UAAU,OAR1B,GAAkCU,aCGrBC,EAAO,WAEhB,MAA8CC,oBAAkB,GAAhE,mBAAOC,EAAP,KAAwBC,EAAxB,KAQA,OALAC,qBAAU,WACNpB,EAAyBmB,KAC1B,IAMC,aADA,CACCE,EAAA,EAAD,CAAeC,MAAOzB,IAAtB,SAEI,cAAC,EAAD,UAEI,cAAC,IAAD,UACKqB,EACK,mCACE,cAAC,IAAD,UACI,cAAC,IAAD,CAAOK,KAAK,IAAIC,QAAS,cAAC,EAAD,UAG/B,cAAC,EAAD,WC1B1BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.47f18360.chunk.js","sourcesContent":["import { createTheme, Theme } from \"@mui/material/styles\";\n\nconst customTheme = createTheme({\n// insert here deviations to the mui default theme or define a whole new theme\n// default theme: https://mui.com/customization/default-theme/\n// Example: \n//  palette: {\n//    primary:{\n//      main: green[500]\n//    },\n//    secondary:{\n//     main: pink[500]\n//   } \n//  }\n});\n\nexport const CustomTheme = {\n  getTheme: () : Theme => {\n    return customTheme;\n  }\n}","import React from'react';\nimport { Box } from \"@mui/system\";\n\n\n\nexport const Subcomponent = () =>  {\n    return <Box>Subcomponent</Box>\n}","/**\n * AuthService offers the possibility to integrate an external authentication.\n * \n * Example: keycloak integration with 'react-keycloak' (https://github.com/react-keycloak/react-keycloak)\n*/\n\nimport React from \"react\";\n\nexport const AuthService = {\n    authenticate: (setAuthentication : React.Dispatch<React.SetStateAction<boolean>>) => {\n        setAuthentication(true);\n    }\n}","import { Box } from \"@mui/system\"\n\nexport const NoAuth = () => {\n    return <Box>Not Authenticated</Box>\n}","import { Typography } from \"@mui/material\";\nimport { Component, ErrorInfo, ReactNode } from \"react\";\n\ninterface Props { children: ReactNode; }\ninterface State { hasError: boolean; }\n\nexport class ErrorHandler extends Component<Props, State> {\n    \n    public state: State = {\n        hasError: false\n    }\n\n    public static getDerivedStateFromError(_: Error) : State{\n        // If an error occurs, update the hasError state to render the error ui.\n        return {hasError: true}\n    }\n\n    public componentDidCatch(error: Error, errorInfo: ErrorInfo){\n        console.error(\"Error: \", error, errorInfo);\n    }\n\n    public render(){\n        if(this.state.hasError){\n            return <Typography variant=\"h1\">Errorpage</Typography>\n        }\n        return this.props.children;\n    }\n}","import { useEffect, useState } from 'react';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { CustomTheme } from '../theme/theme';\nimport { Subcomponent } from './subcomponent/subcomponent';\nimport { AuthService } from '../service/auth-service';\nimport { NoAuth } from './auth/no-auth';\nimport { ErrorHandler } from './error/error';\n\nexport const Main = () => {\n\n    const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n\n    // Application Startup\n    useEffect(() => {\n        AuthService.authenticate(setIsAuthenticated);\n    }, [])\n\n    // Rendering\n    return (\n\n        // Theming explained in  https://mui.com/customization/default-theme/\n        <ThemeProvider theme={CustomTheme.getTheme()}>\n            {/* Error boundary explained in https://reactjs.org/docs/error-boundaries.html */}\n            <ErrorHandler>\n                {/* Routing explained in https://reactrouter.com/ */}\n                <BrowserRouter>\n                    {isAuthenticated\n                        ? <>\n                            <Routes>\n                                <Route path=\"/\" element={<Subcomponent />} />\n                            </Routes>\n                        </>\n                        : <NoAuth />\n                    }\n                </BrowserRouter>\n            </ErrorHandler>\n        </ThemeProvider>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Main } from './components/main';\n\n\n// The index.js is only used for starting up your application\n// For custom component setup see main component!\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}